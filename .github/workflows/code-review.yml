name: PR Checks

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  lint:
    # Run only for PRs from branches in the same repo (not from forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm install

      # Run linting and save output
      - name: Run linting
        run: |
          npm run lint > lint-output.txt 2>&1 || true
          cat lint-output.txt

      # Post results as comment
      - name: Comment results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let output = '';
            try {
              output = fs.readFileSync('lint-output.txt', 'utf8');
            } catch (e) {
              output = 'Could not read linting results';
            }
            
            const comment = `## Linting Results
            
            \`\`\`
            ${output.substring(0, 3000)}
            \`\`\``;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      # Fail if linting didn't pass
      - name: Check lint status
        run: npm run lint

  tests:
    # Run only for PRs from branches in the same repo (not from forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm install
      - run: npm test

      # Post test results
      - name: Post results
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## Test Results
            
            All tests passed successfully.
            
            Code looks good!`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  security:
    # Run only for PRs from branches in the same repo (not from forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm install

      # Check for security issues
      - name: Security check
        run: |
          npm audit --json > audit.json || true
          npm audit || true

      # Post security status
      - name: Post security status
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let audit = {};
            try {
              const data = fs.readFileSync('audit.json', 'utf8');
              audit = JSON.parse(data);
            } catch (e) {
              console.log('Could not parse audit');
            }
            
            const vulns = audit.metadata?.vulnerabilities || {};
            const total = Object.values(vulns).reduce((a, b) => a + b, 0);
            
            const comment = `## Security Check
            
            ${total === 0 ? 'No vulnerabilities found' : 'Vulnerabilities detected'}
            
            - Critical: ${vulns.critical || 0}
            - High: ${vulns.high || 0}
            - Moderate: ${vulns.moderate || 0}
            - Low: ${vulns.low || 0}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Summary of all checks
  summary:
    runs-on: ubuntu-latest
    needs: [lint, tests, security]
    if: always()

    steps:
      - name: Post summary
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              lint: '${{ needs.lint.result }}',
              tests: '${{ needs.tests.result }}',
              security: '${{ needs.security.result }}'
            };
            
            const allPassed = Object.values(results).every(r => r === 'success');
            const fromSameRepo = `From same repo: ${github.context.payload.pull_request?.head?.repo?.full_name === github.context.repo.owner + '/' + github.context.repo.repo}`;
            
            let summary = `## PR Check Summary\n\n`;
            summary += `| Check | Status |\n`;
            summary += `|-------|--------|\n`;
            summary += `| Linting | ${results.lint === 'success' ? '✅' : '❌'} |\n`;
            summary += `| Tests | ${results.tests === 'success' ? '✅' : '❌'} |\n`;
            summary += `| Security | ${results.security === 'success' ? '✅' : '❌'} |\n`;
            summary += `\n${fromSameRepo}`;
            summary += `\n${allPassed ? 'All checks passed - ready to merge' : 'Some checks failed - please fix'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
