name: Dependency Updates

on:
  schedule:
    # Runs weekly on Mondays at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Manual trigger for testing

permissions:
  contents: write
  pull-requests: write

jobs:
  check-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Check for outdated packages
        id: outdated
        run: |
          echo "🔍 Checking for outdated dependencies..."
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "📦 Found outdated dependencies"
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "✅ All dependencies are up to date"
          fi

      - name: Display outdated packages
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "📋 Outdated Dependencies:"
          npm outdated || true

      - name: Create update report
        run: |
          echo "================================================"
          echo "DEPENDENCY UPDATE REPORT"
          echo "Date: $(date)"
          echo "================================================"
          npm outdated || echo "All dependencies up to date"
          echo "================================================"
          echo "Security Audit:"
          npm audit || true
          echo "================================================"

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report-${{ github.run_number }}
          path: |
            outdated.json
          retention-days: 90

  security-updates:
    name: Apply Security Updates
    runs-on: ubuntu-latest
    needs: check-updates

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit fix
        run: |
          echo "🔒 Applying security fixes..."
          npm audit fix || true
          echo "✅ Security fixes applied"

      - name: Run tests after updates
        run: |
          echo "🧪 Running tests to verify updates..."
          npm test
          echo "✅ Tests passed"

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet package.json package-lock.json; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No security updates needed"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Security updates available"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies for security fixes'
          title: '🔒 Security Updates - Dependency Updates'
          body: |
            ## 🔒 Automated Security Updates
            
            This PR contains automated security updates for dependencies.
            
            ### Changes:
            - Applied `npm audit fix` to resolve security vulnerabilities
            - All tests passing ✅
            
            ### Review Checklist:
            - [ ] Review dependency changes
            - [ ] Verify tests pass
            - [ ] Check for breaking changes
            
            **Auto-generated by GitHub Actions**
          branch: dependency-updates-${{ github.run_number }}
          delete-branch: true

      - name: Summary
        run: |
          echo "================================================"
          echo "✅ DEPENDENCY UPDATE CHECK COMPLETED"
          echo "📅 Date: $(date)"
          echo "🔄 Next check: Next Monday at 9:00 AM UTC"
          echo "================================================"

